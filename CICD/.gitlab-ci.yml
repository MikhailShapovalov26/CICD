services :
   - docker:20.10.16-dind
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  PACKAGE_VERSION: "0.14.0"
  NAME_PACKER: "Gradle-1.0-SNAPSHOT.jar"
  GENERIC_JAR: "SNAPSHOT-${PACKAGE_VERSION}.jar"
  ARTIFACT_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${CI_JOB_ID}/artifacts/browse/build/libs/"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/"
  CI_COMMIT_TAG: '0.0.1' 
stages:
  - build
  - upload
  - release
  
build_job:
  stage: build
  image: gradle:5.2.1-jdk-alpine
  script:
    - gradle build
    - echo "ARTIFACT_URL=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${CI_JOB_ID}/" > variables.env
    - cat variables.env
    - echo ${PACKAGE_REGISTRY_URL}
  artifacts:
    paths:
      - build/libs/$NAME_PACKER
    expire_in: 1 hours
    reports:
      junit: build/libs/$NAME_PACKER
      # # To ensure we've access to this file in the next stage
      dotenv: variables.env
  only:
    - master
  tags:
    - docker

upload_job:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG 
  needs:
    - job: build_job
      artifacts: true
  tags:
    - docker
  script:
     - |
        curl --header "PRIVATE-TOKEN: ${GITLAB_PRIVATE_TOKEN}" --upload-file build/libs/$NAME_PACKER "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/libr/${CI_COMMIT_TAG}/$NAME_PACKER"
     - echo "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/libr/$CI_COMMIT_TAG/"


relaese_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG 
  needs:
    - job: build_job
      artifacts: true
  tags:
    - docker
  script:
    - echo "Running the release job."
    - ls -lah
    - ls ./build
    - |
       release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${NAME_PACKER}\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/libr/${CI_COMMIT_TAG}/${NAME_PACKER}\"}" 
